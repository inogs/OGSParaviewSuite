<ServerManagerConfiguration>
  <ProxyGroup name="filters">

   <SourceProxy name="OGSComputeOkuboWeiss" 
                class="vtkOGSComputeOkuboWeiss" 
                label="OGS Compute Okubo-Weiss">
     <Documentation
        long_help="This filter lets the user compute the Okubo-Weiss criterion on the surface."
        short_help="Compute the Okubo-Weiss criterion on the surface.">
        This filter requires a rectilinear grid and computes the Okubo-Weiss criterion using
        the surface velocity, which is copied down at the successive layers. A second and a fourth
        order algorithms can be used to compute the derivatives.
     </Documentation>
     <InputProperty
        name="Input"
        command="SetInputConnection">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
             <Group name="filters"/>
           </ProxyGroupDomain>
           <DataTypeDomain name="input_type">
             <DataType value="vtkDataSet"/>
           </DataTypeDomain>
      </InputProperty>

      <!-- BEGIN EXPOSED PROPERTIES -->

      <!-- Okubo-Weiss coefficent value -->
      <DoubleVectorProperty name="coef"
                            label="Okubo-Weiss filter coefficient: "
                            command="Setcoef"
                            animateable="1"
                            default_values="0.2"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" min="0.0" max="2.0" />
        <Documentation>
          Okubo-Weiss filter coefficient as W0 = coef*std_dev(W)
        </Documentation>
      </DoubleVectorProperty>

      <!-- Velocity field -->
      <StringVectorProperty name="field"
                            label="Variable: "
                            command="Setfield"
                            animateable="1"
                            default_values="Velocity"
                            number_of_elements="1">
        <ArrayListDomain 
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property name="Input" function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          Name of the velocity variable.
        </Documentation>
      </StringVectorProperty>

      <!-- Gradient computation method -->
      <IntVectorProperty name="grad_type"
                         label="Gradient method: "
                         command="Setgrad_type"
                         animateable="1"
                         default_values="2"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <EnumerationDomain name="enum">
          <Entry value="0" text="FC 2nd Order"/> <!-- Face Centered 2nd Order -->
          <Entry value="1" text="FC 4th Order"/> <!-- Face Centered 4th Order -->
          <Entry value="2" text="OGSTM-BFM"/>    <!-- OGSTM-BFM approach -->
        </EnumerationDomain>
        <Documentation>
          Selection of the gradient computation method.
        </Documentation>
      </IntVectorProperty>

      <!-- END EXPOSED PROPERTIES -->
      
      <Hints>
        <Visibility replace_input="1" />
        <ShowInMenu category="OGS" />
        <RepresentationType view="RenderView" type="Surface" />
      </Hints>
   </SourceProxy>

   <SourceProxy class="vtkOGSSelectOkuboWeiss"
                 name="OGSSelectOkuboWeiss"
                 label="OGS Select Okubo-Weiss">
    <Documentation
        long_help="This filter lets the user select the Okubo-Weiss regions from the Okubo-Weiss mask."
        short_help="Lets the user select the Okubo-Weiss regions from the Okubo-Weiss mask.">
        Re-implementation of the vtkThreshold to use the Okubo-Weiss mask and
        select the Okubo-Weiss regions once the Okubo-Weiss criterion has been
        computed.
    </Documentation>

    <InputProperty command="SetInputConnection"
                   name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
                          number_of_components="1">
        </InputArrayDomain>
        <Documentation>This property specifies the input to the Threshold
        filter.</Documentation>
      </InputProperty>

     <!-- Name of basins mask array -->
     <StringVectorProperty name="mask_field"
                           label="Okubo-Weiss mask: "
                           command="Setmask_field"
                           animateable="1"
                           default_values="Okubo-Weiss mask"
                           number_of_elements="1"
                           panel_visibility="advanced">
         <ArrayListDomain name="array_list"
                          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property name="Input" function="Input" />
          </RequiredProperties>
         </ArrayListDomain>
         <Documentation>
            Name of the Okubo-Weiss mask field
         </Documentation>
     </StringVectorProperty>

     <!-- Basins array info-->
     <StringVectorProperty name="OWInfo"
                            information_only="1">
        <ArraySelectionInformationHelper attribute_name="OW" />
     </StringVectorProperty>

     <StringVectorProperty name="OWStatus"
                            command="SetOWArrayStatus"
                            number_of_elements="2"
                            repeat_command="1"
                            number_of_elements_per_command="2"
                            element_types="2 0"
                            information_property="OWInfo"
                            label="Mediterranean Sea">
        <ArraySelectionDomain name="array_list">
          <RequiredProperties>
            <Property name="OWInfo" function="ArrayList" />
          </RequiredProperties>
        </ArraySelectionDomain>
        <Documentation>
          This property contains a list of the Okubo-Weiss regions of the Mediterranean Sea.
        </Documentation>
     </StringVectorProperty>

     <!-- OLD THRESHOLD PARAMETERS HAVE NOW BEEN SHADOWED -->
     
     <!-- Array to process -->
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            label="Scalars"
                            name="SelectInputScalars"
                            number_of_elements="5"
                            panel_visibility="never">
        <ArrayListDomain attribute_type="Scalars"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>The value of this property contains the name of the
        scalar array from which to perform thresholding.</Documentation>
      </StringVectorProperty>

      <!-- Threshold between (just 0.5 and 1) -->
      <DoubleVectorProperty command="ThresholdBetween"
                            default_values="0.5 1"
                            label="Threshold Range"
                            name="ThresholdBetween"
                            number_of_elements="2"
                            panel_visibility="never">
        <Documentation>The values of this property specify the upper and lower
        bounds of the thresholding operation (defaulted to 0.5 and 1).</Documentation>
      </DoubleVectorProperty>

      <!-- All scalars -->
      <IntVectorProperty command="SetAllScalars"
                         default_values="1"
                         name="AllScalars"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>If the value of this property is 1, then a cell is only
        included in the output if the value of the selected array for all its
        points is within the threshold. This is only relevant when thresholding
        by a point-centered array.</Documentation>
      </IntVectorProperty>

      <!-- Use Continuous Cell Range -->
      <IntVectorProperty command="SetUseContinuousCellRange"
                         default_values="0"
                         name="UseContinuousCellRange"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          If off, the vertex scalars are treated as a discrete set. If on, they
          are treated as a continuous interval over the minimum and maximum. One
          important "on" use case: When setting lower and upper threshold
          equal to some value and turning AllScalars off, the results are
          cells containing the isosurface for that value.  WARNING: Whether on
          or off, for higher order input, the filter will not give accurate
          results.
        </Documentation>
      </IntVectorProperty>

      <Hints>
        <Visibility replace_input="1" />
        <ShowInMenu category="OGS" />
        <RepresentationType view="RenderView" type="Surface" />
      </Hints>
      <!-- End Threshold -->
    </SourceProxy>

 </ProxyGroup>
</ServerManagerConfiguration>

